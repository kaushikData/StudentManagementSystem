#include <iostream>
#include <cstdio>
#include <cstring>
//#include <conio.h>
#include <iomanip>
#include <stdlib.h>
#include <fstream>
using namespace std;
class base {
    protected:
        char first_name[25];
        char course[25];
        char section[25];
    public:
        char second_name[25];
        base()
        {
        }
        ~base()
        {
        }

        void getdata()
        {
                cout << "Enter the First Name : ";
                cin >> first_name;
                cout << "Enter the Last Name : ";
                cin >> second_name;
                cout << "Enter the Course    : ";//dynamic memory allocations
                cin >> course;
                cout << "Enter the Section   : ";
                cin >> section;
        }

        void display()
        {
           cout << "\n";
           cout <<"\t\t"<<"FIRST NAME:   "<<setw(20)<< first_name <<endl;
           cout <<"\t\t"<<"SECOND NAME:  "<<setw(20)<< second_name<<endl;
           cout <<"\t\t"<<"COURSE:       "<<setw(20)<<course<<endl;
           cout <<"\t\t"<<"SECTION:      "<<setw(20)<<section<<endl;
        }
    };

struct date
 {
        int day;
        int month;                  //structures
        int year;
 };

 class dat
 {
  protected:
      struct date d1,d2;
  public:
    void getdata()
    {
        cout<<"\nENTER DATE OF BIRTH( day , month , year )";
        cin>>d1.day;
        cin>>d1.month;
        cin>>d1.year;
        cout<<"\nENTER DATE OF ADMISSION( day , month , year )";
        cin>>d2.day;
        cin>>d2.month;
        cin>>d2.year;
    }
    void display()
    {
        cout<<"\t\t"<<"DATE OF BIRTH:"<<endl;
        cout<<"\t\t"<<"DAY:          "<<setw(20)<<d1.day<<endl;
        cout<<"\t\t"<<"MONTH:        "<<setw(20)<<d1.month<<endl;
        cout<<"\t\t"<<"YEAR:         "<<setw(20)<<d1.year<<endl;
        cout<<"\t\t"<<"DATE OF ADMINSION:"<<endl;
        cout<<"\t\t"<<"DAY:          "<<setw(20)<<d2.day<<endl;
        cout<<"\t\t"<<"MONTH:        "<<setw(20)<<d2.month<<endl;
        cout<<"\t\t"<<"YEAR:         "<<setw(20)<<d2.year<<endl;
    }
 };
 class marks
{
protected:
	int s[5];
	float pnt;
	char grade[3];
public:
	void getdata()
	{
		int i;
		cout<<"ENTER MARKS:\n\n";
		for(i=0;i<5;i++)
        {
            cout<<"ENTER SUBJECT :"<<i+1<<" MARKS FOR 100\n";
            cin>>s[i];
        }
	}

	void cgpa()
	{
	    int sum;
	    int i;
	    sum=0;
	    for(i=0;i<5;i++)
        {
            sum=sum+s[i];
        }
        pnt=(sum/50);
	}
	void display();

};
void marks :: display()         //scope resolution operator
{
    int p;
    p=pnt;
    switch(p)
    {
    case 9:
        strcpy(grade,"a1");
        cout<<"YOUR GRADE IN PRESENT SEM IS :"<<grade<<endl;
        cout<<"CGPA : "<<pnt<<endl;
        break;
    case 8:
        strcpy(grade,"b1");
        cout<<"YOUR GRADE IN PRESENT SEM IS :"<<grade<<endl;
        cout<<"CGPA : "<<pnt<<endl;
        break;
    case 7:
        strcpy(grade,"c1");
        cout<<"YOUR GRADE IN PRESENT SEM IS :"<<grade<<endl;
        cout<<"CGPA : "<<pnt<<endl;
        break;
    case 6:
        strcpy(grade,"d1");
        cout<<"YOUR GRADE IN PRESENT SEM IS :"<<grade<<endl;
        cout<<"CGPA : "<<pnt<<endl;
        break;
    case 5:
        strcpy(grade,"e1");
        cout<<"YOUR GRADE IN PRESENT SEM IS :"<<grade<<endl;
        cout<<"CGPA : "<<pnt<<endl;
        break;
    default:
        cout<<"YOU FAILED"<<endl;
        cout<<"CGPA : "<<pnt<<endl;
        break;

    }
}



 class student : public base,public dat,public marks                       //inheritance
 {
 public:
     int roll;
    void getdata()
    {
        base::getdata();
        dat::getdata();
        cout<<"\nENTER ROLL NUMBER";
        cin>>roll;
        marks::getdata();
    }
    void display()
    {
        base::display();
        dat::display();
        cout<<"\t\t"<<"ROLL NO       "<<setw(20)<<roll<<endl;
        marks::cgpa();
        marks::display();
        cout<<"*******************************************************************************************************************";
    }
    void reset()
    {
        strcpy(first_name,"\0");
        strcpy(second_name,"\0");
        strcpy(course,"\0");
        strcpy(section,"\0");
        roll=0;
        d1.day=0;
        d1.month=0;
        d1.year=0;
        d2.day=0;
        d2.month=0;
        d2.year=0;
    }

};
int mygetch(void)
{
struct termios oldt,
newt;
int ch;
tcgetattr(STDIN_FILENO,&oldt);
newt=oldt;
newt.c_lflag&=~(ICANON|ECHO);
tcsetattr(STDIN_FILENO,TCSANOW,&newt);
ch=getchar();
tcsetattr(STDIN_FILENO,TCSANOW,&oldt);
return ch;
}

int main()
{

char pass[30],upass[30],name[30];
cout<<"\n\n\n\n\n";
cout<<"\t\t"<<"       * * * * * * *   * * *          * * *   * * * * * * *                            \n";
cout<<"\t\t"<<"       * * * * * * *   * * *          * * *   * * * * * * *                            \n";
cout<<"\t\t"<<"       * *             * * *          * * *   * *                                      \n";
cout<<"\t\t"<<"       * *             * * *          * * *   * *                                      \n";
cout<<"\t\t"<<"       * * * * * * *   * * * *      * * * *   * * * * * * *                            \n";
cout<<"\t\t"<<"       * * * * * * *   * *   * * * *    * *   * * * * * * *                             \n";
cout<<"\t\t"<<"                 * *   * *      *       * *             * *                             \n";
cout<<"\t\t"<<"                 * *   * *              * *             * *                             \n";
cout<<"\t\t"<<"       * * * * * * *   * *              * *   * * * * * * *                             \n";
cout<<"\t\t"<<"       * * * * * * *   * *              * *   * * * * * * *                             \n";
cout<<"\t\t"<<"                                                                                        \n";
cout<<"\t\t"<<"                                                                                        \n";
cout<<"\t\t"<<"                     student management system                                                                                 \n";
cout<<"\t\t"<<"                    enter user name and password                     \n";
cout<<"username:";
cin>>name;
cout<<endl<<"password:";
for(int i=0;i<5;i++)
	{
		upass[i]=mygetch();
		cout<<"*";
	}
	cout<<endl;

fstream ob;
ob.open("kaushik.txt",ios::in);
ob>>pass;
if(strcmp(upass,pass)==0)
{
    system("pause");
    cout<<"\nwelcome";
    char another;
    int choice;
    student e;
    char xfirst_name[50], xlast_name[50];
    long int recsize;
    recsize = sizeof(e);
while(1) {
     system("clear");
     cout << "\t\t====== STUDENT INFORMATION SYSTEM ======";
     cout <<"\n\n                                          ";
     cout << "\n\n";
     cout << "\n \t\t\t 1. Add    Records";
     cout << "\n \t\t\t 2. List   Records";
     cout << "\n \t\t\t 3. Modify Records";
     cout << "\n \t\t\t 4. Delete Records";
     cout << "\n \t\t\t 5. Exit   Program";
     cout << "\n\n";
     cout << "\t\t\t Select Your Choice :=> ";
     fflush(stdin);
     cin>>choice;
     system("clear");
     switch(choice)
     {

      case 1:

            {
              ofstream ob;
              ob.open("users.txt",ios::app);
              char ch ='Y';
              while(ch == 'Y' || ch == 'y')
                {
                e.getdata();
                system("clear");
                cout<<"\t\t************************************************************************\n";
                cout<<"\t\t\t\t\tVERIFICATION\n";
                cout<<"\t\t************************************************************************\n";
                e.display();
                ob.write( (char*)&e,recsize);
                cout << "\n DO YOU LIKE TO Add Another Record (Y/N) ";
                cout<<"\ndo u want to continue\n";
                cin>>ch;
                }
                ob.close();
            break;
            }
    case 2:
        {
           ifstream ob;
           ob.open("users.txt",ios::in);
        if(!ob)
            cout<<"Error opening file !!";

           system("clear");

           cout << "=== View the Records in the Database ===";
           while (1)
          {
        ob.read((char*)&e,recsize);
          if(ob.eof())
           break;
            e.display();
           }
           cout << "\n\n";
           system("pause");
           ob.close();
           break;
     }

   case 3:
       {
          int flag=1;
          ofstream ob1("temp.txt",ios::out);
          fstream f("users.txt",ios::in|ios::out|ios::app);
          if(!f)
           cout<<"\n\n\t\t\t\t\t\t Error in Opening the file !!";
          system("clear");
          another = 'Y';
          while (another =='Y'|| another == 'y')
          {
              cout << "\n Enter the last name of the student : ";
              cin >> xlast_name;
              f.seekg(0,ios::end);
              int n=f.tellg()/sizeof(e);
            f.seekg(0);
            for(int i=0;i<n;i++)
            {
                f.read((char*)&e,recsize);
                if (strcmp(e.second_name,xlast_name) == 0)
                {
              cout<<"\nFILE FOUND\n";
              //f.seekg(0);
                student t;
                t.getdata();
                ob1.write((char*)&t,recsize);
                flag=0;
               }
               else
               {

                ob1.write((char*)&e,recsize);
                //e.reset()
        }
                }
                f.close();
                ob1.close();
                remove("users.txt");
                rename("temp.txt","users.txt");
               // break;
                if(flag==1)
                cout<<"\nRECORD NOT FOUND";

            cout << "\n Modify Another Record (Y/N) ";
            //cin>>another;

            fflush(stdin);
            another = getchar();
            }

       }

break;
     case 4:
    {
           system("clear");
           another = 'Y';
          while (another == 'Y'|| another == 'y')
          {
              cout << "\n Enter the last name of the student to delete : ";
              cin >> xlast_name;
                ofstream ob1;
                ifstream ob;
              ob1.open("temp.txt");
              ob.open("users.txt");

              ob.seekg(0);
              while (1)
              {
                ob.read((char *)&e,recsize);
                if(ob.eof())
                    break;
                if (strcmp(e.second_name,xlast_name))
                {
                    ob1.write((char*)&e,recsize);
                }
              }
                cout<<"You have succesfully deleted"<<endl;
                ob.close();
                ob1.close();
                remove("users.txt");
                rename("temp.txt","users.txt");
                cout << "\n Delete Another Record (Y/N) ";
                fflush(stdin);
                another = getchar();
               //cin>>another;
              }
    }
              break;

              case 5:
     {

              cout << "\n\n";
              cout << "\t\t     THANK YOU FOR USING THIS PORTAL";
              cout << "\n\n";
              exit(1);
     }


}
}
}
else
    cout<<"\n incorrect password";

          system("pause");
          return 0;
}
